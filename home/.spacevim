" Comment the following line if you don't want Vim and NeoVim to share the
" same plugin download directory.
let g:spacevim_plug_home = '~/.vim/plugged'

" Uncomment the following line to override the leader key. The default value is space key "<\Space>".
" let g:spacevim_leader = "<\Space>"

" Uncomment the following line to override the local leader key. The default value is comma ','.
" let g:spacevim_localleader = ','

" Enable the existing layers in space-vim.
" Refer to https://github.com/liuchengxu/space-vim/blob/master/layers/LAYERS.md for all available layers.
" let g:spacevim_layers = [
"       \ 'fzf', 'better-defaults', 'which-key',
"       \ ]
let g:spacevim_layers = [
      \ 'fzf', 'which-key',
      \ ]

" Uncomment the following line if your terminal(-emulator) supports true colors.
" let g:spacevim_enable_true_color = 1

" Uncomment the following if you have some nerd font installed.
" let g:spacevim_nerd_fonts = 1

" If you want to have more control over the layer, try using Layer command.
" if g:spacevim.gui
"   Layer 'airline'
" endif

" Manage your own plugins.
" Refer to https://github.com/junegunn/vim-plug for more detials.
function! UserInit()

  " Add your own plugin via Plug command.
  " Plug 'junegunn/seoul256.vim'
  Plug 'dense-analysis/ale'
  Plug 'airblade/vim-gitgutter'
  " NB: Using 'develop' branch of python-mode because of issue:
  " https://github.com/python-mode/python-mode/issues/783#issuecomment-320490153
  Plug 'python-mode/python-mode', {'for': 'python', 'branch': 'develop'}
  " Plug 'jonathanfilip/vim-lucius'
  Plug 'cocopon/iceberg.vim'
endfunction

" Override the default settings from space-vim as well as adding extras
function! UserConfig()

  " Override the default settings.

  " let g:python3_host_prog = '/usr/bin/python3.6'

  " Uncomment the following line to disable relative number.
  set norelativenumber

  " Adding extras.
  " Uncomment the following line If you have installed the powerline fonts.
  " It is good for airline layer.
  " let g:airline_powerline_fonts = 1

  " Focus follows mouse
  set mouse=a

  set hlsearch

  " Set background to dark (must come before colorscheme)
  set background=dark

  " if (has("termguicolors"))
  "   set termguicolors
  " endif

	" set Vim-specific sequences for RGB colors
  " This fixes termguicolors with Tmux
	if exists('+termguicolors')
		let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
		let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
		" set termguicolors
	endif

  " let g:lucius_style = 'dark'
	" let g:lucius_contrast = 'normal'
	" let g:lucius_contrast_bg = 'normal'
	" let g:lucius_use_bold = 1
	" let g:lucius_use_underline = 1
	" let g:lucius_no_term_bg = 0
	" colorscheme lucius

  colorscheme iceberg

  " set background to transparent (must come after colorscheme)
  " hi Normal guibg=NONE ctermbg=NONE

  let g:pymode_python = 'python3'

  " Linting
  let g:pymode_lint = 1
  let g:pymode_lint_checker = "pyflakes,pep8"
  let g:pymode_lint_write = 1  " Auto check on save
  let g:pymode_lint_ignore=["E501","W291","W293","C0103"]

  " disable trimming whitespace on save
  let g:pymode_trim_whitespaces = 0

  " breakpoints
  let g:pymode_breakpoint = 1
  let g:pymode_breakpoint_bind = '<leader>b'

  " syntax highlighting
  let g:pymode_syntax = 1
  let g:pymode_syntax_all = 1
  let g:pymode_syntax_indent_errors = 1
  let g:pymode_syntax_space_errors = 0

endfunction
